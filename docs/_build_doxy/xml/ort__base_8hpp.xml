<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="ort__base_8hpp" kind="file" language="C++">
    <compoundname>ort_base.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="yes">boost/none.hpp</includes>
    <includes local="yes">boost/optional.hpp</includes>
    <includedby refid="epd__container_8hpp" local="yes">/home/rosi/Desktop/rect_ws/src/epd/easy_perception_deployment/include/epd_utils_lib/epd_container.hpp</includedby>
    <includedby refid="p1__ort__base_8hpp" local="yes">/home/rosi/Desktop/rect_ws/src/epd/easy_perception_deployment/include/ort_cpp_lib/p1_ort_base.hpp</includedby>
    <includedby refid="p2__ort__base_8hpp" local="yes">/home/rosi/Desktop/rect_ws/src/epd/easy_perception_deployment/include/ort_cpp_lib/p2_ort_base.hpp</includedby>
    <includedby refid="p3__ort__base_8hpp" local="yes">/home/rosi/Desktop/rect_ws/src/epd/easy_perception_deployment/include/ort_cpp_lib/p3_ort_base.hpp</includedby>
    <incdepgraph>
      <node id="57">
        <label>boost/none.hpp</label>
      </node>
      <node id="54">
        <label>string</label>
      </node>
      <node id="56">
        <label>vector</label>
      </node>
      <node id="52">
        <label>/home/rosi/Desktop/rect_ws/src/epd/easy_perception_deployment/include/ort_cpp_lib/ort_base.hpp</label>
        <link refid="ort__base_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>utility</label>
      </node>
      <node id="58">
        <label>boost/optional.hpp</label>
      </node>
      <node id="53">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classOrt_1_1OrtBase" prot="public">Ort::OrtBase</innerclass>
    <innernamespace refid="namespaceOrt">Ort</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>ROS-Industrial<sp/>Consortium<sp/>Asia<sp/>Pacific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ORT_CPP_LIB__ORT_BASE_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ORT_CPP_LIB__ORT_BASE_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/none.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;boost/optional.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceOrt" kindref="compound">Ort</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35" refid="classOrt_1_1OrtBase" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classOrt_1_1OrtBase" kindref="compound">OrtBase</ref></highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="classOrt_1_1OrtBase_1ad81b15848098d8137f8816fb1a491dab" kindref="member">OrtBase</ref>(</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>modelPath,<sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::optional&lt;size_t&gt;<sp/>&amp;<sp/>gpuIdx<sp/>=<sp/>boost::none,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::optional&lt;std::vector&lt;std::vector&lt;std::int64_t&gt;&gt;&gt;<sp/>&amp;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>inputShapes<sp/>=<sp/>boost::none);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classOrt_1_1OrtBase_1ab311e3e35bd05728ec48f5a42947d172" kindref="member">~OrtBase</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classOrt_1_1OrtBase_1adf2da264432541eb7cdf1122f742e9c4" kindref="member">DataOutputType</ref><sp/>=<sp/>std::pair&lt;float<sp/>*,<sp/>std::vector&lt;std::int64_t&gt;&gt;;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>std::vector&lt;DataOutputType&gt;<sp/><ref refid="classOrt_1_1OrtBase_1a3fc8f611e4392faec49fea733b23ccb5" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float<sp/>*&gt;<sp/>&amp;<sp/>inputImgData);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classOrt_1_1OrtBase_1a9d54c41654fed1d5bee18b089d5a6edd" kindref="member">getNumOutputs</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">OrtBaseImpl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;OrtBaseImpl&gt;<sp/>base_impl_;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Ort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>ORT_CPP_LIB__ORT_BASE_HPP_</highlight></codeline>
    </programlisting>
    <location file="/home/rosi/Desktop/rect_ws/src/epd/easy_perception_deployment/include/ort_cpp_lib/ort_base.hpp"/>
  </compounddef>
</doxygen>
